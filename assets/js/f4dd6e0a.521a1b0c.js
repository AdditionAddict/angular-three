"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[1],{9613:(e,t,r)=>{r.d(t,{Zo:()=>p,kt:()=>g});var n=r(9496);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function l(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var i=n.createContext({}),c=function(e){var t=n.useContext(i),r=t;return e&&(r="function"==typeof e?e(t):l(l({},t),e)),r},p=function(e){var t=c(e.components);return n.createElement(i.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,i=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),u=c(r),m=a,g=u["".concat(i,".").concat(m)]||u[m]||d[m]||o;return r?n.createElement(g,l(l({ref:t},p),{},{components:r})):n.createElement(g,l({ref:t},p))}));function g(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,l=new Array(o);l[0]=m;var s={};for(var i in t)hasOwnProperty.call(t,i)&&(s[i]=t[i]);s.originalType=e,s[u]="string"==typeof e?e:a,l[1]=s;for(var c=2;c<o;c++)l[c]=r[c];return n.createElement.apply(null,l)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},7656:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>i,contentTitle:()=>l,default:()=>u,frontMatter:()=>o,metadata:()=>s,toc:()=>c});var n=r(4778),a=(r(9496),r(9613));const o={id:"store",title:"Store",sidebar_label:"Store"},l=void 0,s={unversionedId:"api/store",id:"api/store",title:"Store",description:"NgtStore contains all information about the current NgtCanvas. NgtStore extends RxState API",source:"@site/docs/api/store.mdx",sourceDirName:"api",slug:"/api/store",permalink:"/docs/api/store",draft:!1,editUrl:"https://github.com/angular-threejs/angular-three/tree/main/apps/documentation/docs/api/store.mdx",tags:[],version:"current",frontMatter:{id:"store",title:"Store",sidebar_label:"Store"},sidebar:"docs",previous:{title:"Raw Value",permalink:"/docs/api/raw-value"},next:{title:"Additional Exports",permalink:"/docs/api/additional-exports"}},i={},c=[{value:"Select states reactively",id:"select-states-reactively",level:2},{value:"Get states imperatively",id:"get-states-imperatively",level:2},{value:"Register before render callbacks",id:"register-before-render-callbacks",level:2}],p={toc:c};function u(e){let{components:t,...r}=e;return(0,a.kt)("wrapper",(0,n.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"NgtStore")," contains all information about the current ",(0,a.kt)("inlineCode",{parentName:"p"},"NgtCanvas"),". ",(0,a.kt)("inlineCode",{parentName:"p"},"NgtStore")," extends ",(0,a.kt)("a",{parentName:"p",href:"https://www.rx-angular.io/docs/state/api/rx-state"},"RxState")," API"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},"@Component({\n    /*...*/\n})\nexport class SceneGraph {\n    // inject the Store. We can also use Constructor DI\n    readonly store = inject(NgtStore);\n}\n")),(0,a.kt)("h2",{id:"select-states-reactively"},"Select states reactively"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},"@Component({\n    /*...*/\n})\nexport class SceneGraph {\n    readonly store = inject(NgtStore);\n    readonly camera$ = this.store.select('camera'); // Observable<NgtCamera>\n    readonly glDom$ = this.store.select('gl', 'domElement'); // Observable<HTMLElement>\n}\n")),(0,a.kt)("h2",{id:"get-states-imperatively"},"Get states imperatively"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},"@Component({\n    /*...*/\n})\nexport class SceneGraph {\n    readonly store = inject(NgtStore);\n    readonly camera = this.store.get('camera'); // NgtCamera\n    readonly glDom = this.store.get('gl', 'domElement'); // HTMLElement\n}\n")),(0,a.kt)("h2",{id:"register-before-render-callbacks"},"Register before render callbacks"),(0,a.kt)("p",null,"Beside using ",(0,a.kt)("inlineCode",{parentName:"p"},"(beforeRender)")," Output on Custom Element tags, we can also use ",(0,a.kt)("inlineCode",{parentName:"p"},"NgtStore")," to register a before render callback"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},"@Component({\n    /*...*/\n})\nexport class SceneGraph {\n    readonly store = inject(NgtStore);\n\n    private sub?: () => void;\n\n    ngOnInit() {\n        // register and return the clean up function\n        // signature: subscribe(callback, priority)\n        this.sub = this.store.get('internal').subscribe(() => {}, 0);\n    }\n\n    ngOnDestroy() {\n        // call the clean up function to unregister the callback\n        this.sub?.();\n    }\n}\n")))}u.isMDXComponent=!0}}]);