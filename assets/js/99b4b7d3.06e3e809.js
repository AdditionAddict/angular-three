"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[186],{9613:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>f});var r=n(9496);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),c=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=c(e.components);return r.createElement(s.Provider,{value:t},e.children)},d="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),d=c(n),u=a,f=d["".concat(s,".").concat(u)]||d[u]||m[u]||o;return n?r.createElement(f,i(i({ref:t},p),{},{components:n})):r.createElement(f,i({ref:t},p))}));function f(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=u;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[d]="string"==typeof e?e:a,i[1]=l;for(var c=2;c<o;c++)i[c]=n[c];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}u.displayName="MDXCreateElement"},4640:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>d,frontMatter:()=>o,metadata:()=>l,toc:()=>c});var r=n(4778),a=(n(9496),n(9613));const o={id:"performance",title:"Performance",sidebar_label:"Performance"},i=void 0,l={unversionedId:"advanced/performance",id:"advanced/performance",title:"Performance",description:"Re-use Geometries and Materials",source:"@site/docs/advanced/performance.mdx",sourceDirName:"advanced",slug:"/advanced/performance",permalink:"/docs/advanced/performance",draft:!1,editUrl:"https://github.com/angular-threejs/angular-three/tree/main/apps/documentation/docs/advanced/performance.mdx",tags:[],version:"current",frontMatter:{id:"performance",title:"Performance",sidebar_label:"Performance"},sidebar:"docs",previous:{title:"Compound Component",permalink:"/docs/advanced/compound"},next:{title:"Migrate to Angular Three (WIP)",permalink:"/docs/migrations/migrate"}},s={},c=[{value:"Re-use Geometries and Materials",id:"re-use-geometries-and-materials",level:2},{value:"Imperative",id:"imperative",level:3},{value:"Declarative",id:"declarative",level:3},{value:"On-demand Rendering",id:"on-demand-rendering",level:2}],p={toc:c};function d(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h2",{id:"re-use-geometries-and-materials"},"Re-use Geometries and Materials"),(0,a.kt)("p",null,"Each Geometry and Material consumes the GPU's resources. If we know certain Geometries and/or Materials will repeat, we can reuse them"),(0,a.kt)("h3",{id:"imperative"},"Imperative"),(0,a.kt)("p",null,"We can have static geometries and materials as Component's properties"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},'@Component({\n    standalone: true,\n    template: `\n        <ngt-mesh [geometry]="sphere" [material]="redMaterial" [position]="[1, 1, 1]" />\n        <ngt-mesh [geometry]="sphere" [material]="redMaterial" [position]="[2, 2, 2]" />\n    `,\n})\nexport class SceneGraph {\n    readonly sphere = new THREE.SphereGeometry(1, 32, 32);\n    readonly redMaterial = new THREE.MeshBasicMaterial({ color: \'red\' });\n}\n')),(0,a.kt)("p",null,"We can also store these static objects in a Service to reuse across the application"),(0,a.kt)("h3",{id:"declarative"},"Declarative"),(0,a.kt)("p",null,"We can put the Geometries and Materials declaratively on the template so they can react to Input changes; and still can reuse them"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},'@Component({\n    standalone: true,\n    template: `\n        <ngt-sphere-geometry *args="sphereArgs" [ref]="sphereRef" />\n        <ngt-mesh-basic-material #redMaterial [color]="color" />\n\n        <ngt-mesh [geometry]="sphereRef.nativeElement" [material]="redMaterial" [position]="[1, 1, 1]" />\n        <ngt-mesh [geometry]="sphereRef.nativeElement" [material]="redMaterial" [position]="[2, 2, 2]" />\n    `,\n    imports: [NgtArgs],\n})\nexport class SceneGraph {\n    readonly sphereRef = injectNgtRef<THREE.SphereGeometry>();\n\n    sphereArgs = [1, 32, 32];\n    color = \'red\';\n}\n')),(0,a.kt)("h2",{id:"on-demand-rendering"},"On-demand Rendering"),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"Credit: ",(0,a.kt)("a",{parentName:"p",href:"https://docs.pmnd.rs/react-three-fiber/advanced/scaling-performance#on-demand-rendering"},"React Three Fiber"))),(0,a.kt)("p",null,"The SceneGraph is usually rendered at 60 frames per second. This makes sense if the SceneGraph ontains ",(0,a.kt)("em",{parentName:"p"},"constantly")," moving parts (eg: game).\nConsequently, this drains the device's resources."),(0,a.kt)("p",null,"If the SceneGraph has static entities, or entities that are allowed to come to a rest, constantly rendering at 60fps would be wasteful.\nIn those cases, we can opt into on-demand rendering, which will only render when necessary. All we have to do is to set ",(0,a.kt)("inlineCode",{parentName:"p"},'frameloop="demand"')," on the ",(0,a.kt)("inlineCode",{parentName:"p"},"<ngt-canvas>")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-html"},'<ngt-canvas frameloop="demand" />\n')),(0,a.kt)("admonition",{type:"info"},(0,a.kt)("p",{parentName:"admonition"},"Check out ",(0,a.kt)("a",{parentName:"p",href:"https://angular-threejs-demo.netlify.app/color-grading"},"Color Grading example")," to see on-demand rendering in action.")))}d.isMDXComponent=!0}}]);